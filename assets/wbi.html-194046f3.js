import{_ as u,r as e,o as i,c as l,a as s,b as n,d as a,w as o,e as p}from"./app-4ea165c6.js";const r={},k=s("h1",{id:"wbi签名",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#wbi签名","aria-hidden":"true"},"#"),n(" Wbi签名")],-1),d=s("code",null,"w_rid",-1),m=s("code",null,"wts",-1),b=s("p",null,[n("这些接口涵盖”用户投稿视频“、”用户投稿专栏“、”首页推送“、”推广信息“、”热搜“、”视频信息“、”视频取流“、”搜索“等待主要查询性业务接口，如果请求这些 REST API 缺失"),s("code",null,"w_rid"),n("和"),s("code",null,"wts"),n("字段，则会在数次请求后返回"),s("code",null,"-403:非法访问"),n("这样的风控错误")],-1),v={href:"https://github.com/SocialSisterYi/bilibili-API-collect/issues/631",target:"_blank",rel:"noopener noreferrer"},g=s("h2",{id:"wbi签名算法",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#wbi签名算法","aria-hidden":"true"},"#"),n(" Wbi签名算法")],-1),y=s("p",null,"获取实时口令",-1),f=s("code",null,"img_url",-1),w=s("code",null,"sub_url",-1),q=p(`<p><strong>注：<code>img_url</code>、<code>sub_url</code>两个字段的值看似为存于 BFS 中的 png 图片 url，实则只是经过伪装的实时 Token，故无需且不能试图访问这两个 url</strong></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;wbi_img&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;img_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://i0.hdslb.com/bfs/wbi/653657f524a547ac981ded72ea172057.png&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;sub_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://i0.hdslb.com/bfs/wbi/6e4909c702f846728e64f6007736a338.png&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这两个 Key 均为 url 中末尾路径的无扩展名的文件名，即<code>img_key=653657f524a547ac981ded72ea172057</code>，<code>sub_key=6e4909c702f846728e64f6007736a338</code></p><p>这两个 Key 的值无关登录 Session 与 IP，属于全站统一使用的，但<strong>每日都会变化</strong>，使用时应做好<strong>缓存和刷新</strong>处理</p>`,4),h=p(`<li><p>打乱重排实时口令</p><p>把上一步获取到的<code>sub_key</code>拼接在<code>img_key</code>后面 <strong>（这里不是<code>img_url</code>和<code>sub_url</code>）</strong> 作为一个整体，将这个整体进行特定的顺序的字符打乱重排，再将重排后的字符串截取前 32 字符的切片，作为一个新的变量<code>mixin_key</code>，重排映射表长为 64，内容如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> mixinKeyEncTab <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span>
    <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span>
    <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span>
    <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">52</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>打乱重排内容如下（以上述第 1 步的参数作为输入）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>72136226c6a73669787ee4fd02a74c27
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>为参数中添加<code>wts</code>时间戳</p><p>若下方内容为欲签名的请求参数（以 js obj 为例）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
     <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;114&#39;</span><span class="token punctuation">,</span>
     <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token string">&#39;514&#39;</span><span class="token punctuation">,</span>
     <span class="token literal-property property">zab</span><span class="token operator">:</span> <span class="token number">1919810</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>wts</code>字段的值应为以秒为单位的 Unix TimeStamp，如<code>1684746387</code></p><p>将<code>wts</code>参数添加在参数列表中，即：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
     <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;114&#39;</span><span class="token punctuation">,</span>
     <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token string">&#39;514&#39;</span><span class="token punctuation">,</span>
     <span class="token literal-property property">zab</span><span class="token operator">:</span> <span class="token number">1919810</span><span class="token punctuation">,</span>
     <span class="token literal-property property">wts</span><span class="token operator">:</span> <span class="token number">1684746387</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>将欲签名的请求参数排序后编码</p><p>按照 Key 升序排序并进行 url query 编码后的结果应为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bar=514&amp;foo=114&amp;wts=1684746387&amp;zab=1919810
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>请注意，如果参数值为中文或特殊字符，则进行 url query 编码后的字符串中参数值对应的字母必须是<strong>大写字母</strong> （部分库会编码为小写字母）</p><p>例如</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
     <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;one one four&#39;</span><span class="token punctuation">,</span>
     <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token string">&#39;五一四&#39;</span><span class="token punctuation">,</span>
     <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token number">1919810</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应该被编码为</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bar=%E4%BA%94%E4%B8%80%E5%9B%9B&amp;baz=1919810&amp;foo=one%20one%20four
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>计算<code>w_rid</code>并添加在其后</p><p>在上一步得出的 url query 字符串后拼接第 2 步计算得出的<code>mixin_key</code>（作为盐）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bar=514&amp;foo=114&amp;wts=1684746387&amp;zab=191981072136226c6a73669787ee4fd02a74c27
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>对这个整体进行 <strong>md5 Hash 运算</strong>（32-bit 字符小写），得到的值便是 Wbi Sign，也就是参数<code>w_rid</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>90efcab09403023875b8516f07e9f9de
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后一步，把这个计算出的值作为参数<code>w_rid</code>添加在原始参数列表后，也就完成了一次 Wbi Sign，可以调用 REST API 进行请求了</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bar=514&amp;foo=114&amp;wts=1684746387&amp;zab=1919810&amp;w_rid=90efcab09403023875b8516f07e9f9de
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,4),_=p(`<h2 id="wbi签名算法实现demo" tabindex="-1"><a class="header-anchor" href="#wbi签名算法实现demo" aria-hidden="true">#</a> Wbi签名算法实现Demo</h2><p>该 Demo 提供 <a href="#Python">Python</a>、<a href="#JavaScript">JavaScript</a>、<a href="#Golang">Golang</a>、<a href="#CSharp">C#</a>和<a href="#Java">Java</a> 语言</p><h3 id="python" tabindex="-1"><a class="header-anchor" href="#python" aria-hidden="true">#</a> Python</h3><p>需要<code>requests</code>依赖</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> functools <span class="token keyword">import</span> <span class="token builtin">reduce</span>
<span class="token keyword">from</span> hashlib <span class="token keyword">import</span> md5
<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse
<span class="token keyword">import</span> time
<span class="token keyword">import</span> requests

mixinKeyEncTab <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span>
    <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span>
    <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span>
    <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">52</span>
<span class="token punctuation">]</span>

<span class="token keyword">def</span> <span class="token function">getMixinKey</span><span class="token punctuation">(</span>orig<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&#39;对 imgKey 和 subKey 进行字符顺序打乱编码&#39;</span>
    <span class="token keyword">return</span> <span class="token builtin">reduce</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> s<span class="token punctuation">,</span> i<span class="token punctuation">:</span> s <span class="token operator">+</span> orig<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> mixinKeyEncTab<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">32</span><span class="token punctuation">]</span>

<span class="token keyword">def</span> <span class="token function">encWbi</span><span class="token punctuation">(</span>params<span class="token punctuation">:</span> <span class="token builtin">dict</span><span class="token punctuation">,</span> img_key<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> sub_key<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token string">&#39;为请求参数进行 wbi 签名&#39;</span>
    mixin_key <span class="token operator">=</span> getMixinKey<span class="token punctuation">(</span>img_key <span class="token operator">+</span> sub_key<span class="token punctuation">)</span>
    curr_time <span class="token operator">=</span> <span class="token builtin">round</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    params<span class="token punctuation">[</span><span class="token string">&#39;wts&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> curr_time                                   <span class="token comment"># 添加 wts 字段</span>
    params <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                       <span class="token comment"># 按照 key 重排参数</span>
    <span class="token comment"># 过滤 value 中的 &quot;!&#39;()*&quot; 字符</span>
    params <span class="token operator">=</span> <span class="token punctuation">{</span>
        k <span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> <span class="token builtin">chr</span><span class="token punctuation">:</span> <span class="token builtin">chr</span> <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token string">&quot;!&#39;()*&quot;</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> k<span class="token punctuation">,</span> v 
        <span class="token keyword">in</span> params<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    query <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>params<span class="token punctuation">)</span>                      <span class="token comment"># 序列化参数</span>
    wbi_sign <span class="token operator">=</span> md5<span class="token punctuation">(</span><span class="token punctuation">(</span>query <span class="token operator">+</span> mixin_key<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 计算 w_rid</span>
    params<span class="token punctuation">[</span><span class="token string">&#39;w_rid&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> wbi_sign
    <span class="token keyword">return</span> params

<span class="token keyword">def</span> <span class="token function">getWbiKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">tuple</span><span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
    <span class="token string">&#39;获取最新的 img_key 和 sub_key&#39;</span>
    resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;https://api.bilibili.com/x/web-interface/nav&#39;</span><span class="token punctuation">)</span>
    resp<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span>
    json_content <span class="token operator">=</span> resp<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
    img_url<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> json_content<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;wbi_img&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;img_url&#39;</span><span class="token punctuation">]</span>
    sub_url<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> json_content<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;wbi_img&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;sub_url&#39;</span><span class="token punctuation">]</span>
    img_key <span class="token operator">=</span> img_url<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    sub_key <span class="token operator">=</span> sub_url<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> img_key<span class="token punctuation">,</span> sub_key

img_key<span class="token punctuation">,</span> sub_key <span class="token operator">=</span> getWbiKeys<span class="token punctuation">(</span><span class="token punctuation">)</span>

signed_params <span class="token operator">=</span> encWbi<span class="token punctuation">(</span>
    params<span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token string">&#39;foo&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;114&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;bar&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;514&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;baz&#39;</span><span class="token punctuation">:</span> <span class="token number">1919810</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    img_key<span class="token operator">=</span>img_key<span class="token punctuation">,</span>
    sub_key<span class="token operator">=</span>sub_key
<span class="token punctuation">)</span>
query <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>signed_params<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>signed_params<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出内容分别是进行 Wbi 签名的后参数的 key-Value 以及 url query 形式</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{&#39;bar&#39;: &#39;514&#39;, &#39;baz&#39;: &#39;1919810&#39;, &#39;foo&#39;: &#39;114&#39;, &#39;wts&#39;: &#39;1684746387&#39;, &#39;w_rid&#39;: &#39;d3cbd2a2316089117134038bf4caf442&#39;}
bar=514&amp;baz=1919810&amp;foo=114&amp;wts=1684746387&amp;w_rid=d3cbd2a2316089117134038bf4caf442
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript" aria-hidden="true">#</a> JavaScript</h3><p>需要 <code>axios</code>、<code>md5</code> 依赖</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> md5 <span class="token keyword">from</span> <span class="token string">&#39;md5&#39;</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span>

<span class="token keyword">const</span> mixinKeyEncTab <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span>
    <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span>
    <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span>
    <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">52</span>
<span class="token punctuation">]</span>

<span class="token comment">// 对 imgKey 和 subKey 进行字符顺序打乱编码</span>
<span class="token keyword">function</span> <span class="token function">getMixinKey</span><span class="token punctuation">(</span><span class="token parameter">orig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    mixinKeyEncTab<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        temp <span class="token operator">+=</span> orig<span class="token punctuation">[</span>n<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> temp<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// 为请求参数进行 wbi 签名</span>
<span class="token keyword">function</span> <span class="token function">encWbi</span><span class="token punctuation">(</span><span class="token parameter">params<span class="token punctuation">,</span> img_key<span class="token punctuation">,</span> sub_key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> mixin_key <span class="token operator">=</span> <span class="token function">getMixinKey</span><span class="token punctuation">(</span>img_key <span class="token operator">+</span> sub_key<span class="token punctuation">)</span><span class="token punctuation">,</span>
        curr_time <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        chr_filter <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[!&#39;()*]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
    <span class="token keyword">let</span> query <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">wts</span><span class="token operator">:</span> curr_time <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 添加 wts 字段</span>
    <span class="token comment">// 按照 key 重排参数</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        query<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
            <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>
                <span class="token comment">// 过滤 value 中的 &quot;!&#39;()*&quot; 字符</span>
                params<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>chr_filter<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    query <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&amp;&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> wbi_sign <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span>query <span class="token operator">+</span> mixin_key<span class="token punctuation">)</span> <span class="token comment">// 计算 w_rid</span>
    <span class="token keyword">return</span> query <span class="token operator">+</span> <span class="token string">&#39;&amp;w_rid=&#39;</span> <span class="token operator">+</span> wbi_sign
<span class="token punctuation">}</span>

<span class="token comment">// 获取最新的 img_key 和 sub_key</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">getWbiKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> resp <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;https://api.bilibili.com/x/web-interface/nav&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        json_content <span class="token operator">=</span> resp<span class="token punctuation">.</span>data<span class="token punctuation">,</span>
        img_url <span class="token operator">=</span> json_content<span class="token punctuation">.</span>data<span class="token punctuation">.</span>wbi_img<span class="token punctuation">.</span>img_url<span class="token punctuation">,</span>
        sub_url <span class="token operator">=</span> json_content<span class="token punctuation">.</span>data<span class="token punctuation">.</span>wbi_img<span class="token punctuation">.</span>sub_url

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">img_key</span><span class="token operator">:</span> img_url<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>
            img_url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
            img_url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">sub_key</span><span class="token operator">:</span> sub_url<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>
            sub_url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
            sub_url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">getWbiKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">wbi_keys</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token function">encWbi</span><span class="token punctuation">(</span>
        <span class="token punctuation">{</span>
            <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&#39;114&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token string">&#39;514&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token number">1919810</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        wbi_keys<span class="token punctuation">.</span>img_key<span class="token punctuation">,</span> 
        wbi_keys<span class="token punctuation">.</span>sub_key
    <span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出内容为进行 Wbi 签名的后参数的 url query 形式</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bar=514&amp;baz=1919810&amp;foo=114&amp;wts=1684805578&amp;w_rid=bb97e15f28edf445a0e4420d36f0157e
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="golang" tabindex="-1"><a class="header-anchor" href="#golang" aria-hidden="true">#</a> Golang</h3><p>需要 <code>github.com/tidwall/gjson</code> 作为依赖</p><div class="language-golang line-numbers-mode" data-ext="golang"><pre class="language-golang"><code>package main

import (
        &quot;crypto/md5&quot;
        &quot;encoding/hex&quot;
        &quot;fmt&quot;
        &quot;io&quot;
        &quot;net/http&quot;
        &quot;net/url&quot;
        &quot;sort&quot;
        &quot;strconv&quot;
        &quot;strings&quot;
        &quot;sync&quot;
        &quot;time&quot;

        &quot;github.com/tidwall/gjson&quot;
)

var (
        mixinKeyEncTab = []int{
                46, 47, 18, 2, 53, 8, 23, 32, 15, 50, 10, 31, 58, 3, 45, 35, 27, 43, 5, 49,
                33, 9, 42, 19, 29, 28, 14, 39, 12, 38, 41, 13, 37, 48, 7, 16, 24, 55, 40,
                61, 26, 17, 0, 1, 60, 51, 30, 4, 22, 25, 54, 21, 56, 59, 6, 63, 57, 62, 11,
                36, 20, 34, 44, 52,
        }
        cache          sync.Map
        lastUpdateTime time.Time
)

func main() {
        urlStr := &quot;https://api.bilibili.com/x/space/wbi/acc/info?mid=1850091&quot;
        newUrlStr, err := signAndGenerateURL(urlStr)
        if err != nil {
                fmt.Printf(&quot;Error: %s&quot;, err)
                return
        }
        req, err := http.NewRequest(&quot;GET&quot;, newUrlStr, nil)
        if err != nil {
                fmt.Printf(&quot;Error: %s&quot;, err)
                return
        }
        req.Header.Set(&quot;User-Agent&quot;, &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36&quot;)
        response, err := http.DefaultClient.Do(req)
        if err != nil {
                fmt.Printf(&quot;Request failed: %s&quot;, err)
                return
        }
        defer response.Body.Close()
        body, err := io.ReadAll(response.Body)
        if err != nil {
                fmt.Printf(&quot;Failed to read response: %s&quot;, err)
                return
        }
        fmt.Println(string(body))
}

func signAndGenerateURL(urlStr string) (string, error) {
        urlObj, err := url.Parse(urlStr)
        if err != nil {
                return &quot;&quot;, err
        }
        imgKey, subKey := getWbiKeysCached()
        query := urlObj.Query()
        params := map[string]string{}
        for k, v := range query {
                params[k] = v[0]
        }
        newParams := encWbi(params, imgKey, subKey)
        for k, v := range newParams {
                query.Set(k, v)
        }
        urlObj.RawQuery = query.Encode()
        newUrlStr := urlObj.String()
        return newUrlStr, nil
}

func encWbi(params map[string]string, imgKey, subKey string) map[string]string {
        mixinKey := getMixinKey(imgKey + subKey)
        currTime := strconv.FormatInt(time.Now().Unix(), 10)
        params[&quot;wts&quot;] = currTime

        // Sort keys
        keys := make([]string, 0, len(params))
        for k := range params {
                keys = append(keys, k)
        }
        sort.Strings(keys)

        // Remove unwanted characters
        for k, v := range params {
                v = sanitizeString(v)
                params[k] = v
        }

        // Build URL parameters
        query := url.Values{}
        for _, k := range keys {
                query.Set(k, params[k])
        }
        queryStr := query.Encode()

        // Calculate w_rid
        hash := md5.Sum([]byte(queryStr + mixinKey))
        params[&quot;w_rid&quot;] = hex.EncodeToString(hash[:])
        return params
}

func getMixinKey(orig string) string {
        var str strings.Builder
        for _, v := range mixinKeyEncTab {
                if v &lt; len(orig) {
                        str.WriteByte(orig[v])
                }
        }
        return str.String()[:32]
}

func sanitizeString(s string) string {
        unwantedChars := []string{&quot;!&quot;, &quot;&#39;&quot;, &quot;(&quot;, &quot;)&quot;, &quot;*&quot;}
        for _, char := range unwantedChars {
                s = strings.ReplaceAll(s, char, &quot;&quot;)
        }
        return s
}

func updateCache() {
        if time.Since(lastUpdateTime).Minutes() &lt; 10 {
                return
        }
        imgKey, subKey := getWbiKeys()
        cache.Store(&quot;imgKey&quot;, imgKey)
        cache.Store(&quot;subKey&quot;, subKey)
        lastUpdateTime = time.Now()
}

func getWbiKeysCached() (string, string) {
        updateCache()
        imgKeyI, _ := cache.Load(&quot;imgKey&quot;)
        subKeyI, _ := cache.Load(&quot;subKey&quot;)
        return imgKeyI.(string), subKeyI.(string)
}

func getWbiKeys() (string, string) {
        resp, err := http.Get(&quot;https://api.bilibili.com/x/web-interface/nav&quot;)
        if err != nil {
                fmt.Printf(&quot;Error: %s&quot;, err)
                return &quot;&quot;, &quot;&quot;
        }
        defer resp.Body.Close()
        body, err := io.ReadAll(resp.Body)
        if err != nil {
                fmt.Printf(&quot;Error: %s&quot;, err)
                return &quot;&quot;, &quot;&quot;
        }
        json := string(body)
        imgURL := gjson.Get(json, &quot;data.wbi_img.img_url&quot;).String()
        subURL := gjson.Get(json, &quot;data.wbi_img.sub_url&quot;).String()
        imgKey := strings.Split(strings.Split(imgURL, &quot;/&quot;)[len(strings.Split(imgURL, &quot;/&quot;))-1], &quot;.&quot;)[0]
        subKey := strings.Split(strings.Split(subURL, &quot;/&quot;)[len(strings.Split(subURL, &quot;/&quot;))-1], &quot;.&quot;)[0]
        return imgKey, subKey
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="csharp" tabindex="-1"><a class="header-anchor" href="#csharp" aria-hidden="true">#</a> CSharp</h3><p>无需依赖外部库</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Security<span class="token punctuation">.</span>Cryptography</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Json<span class="token punctuation">.</span>Nodes</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Program</span>
<span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HttpClient</span> _httpClient <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">readonly</span> <span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> MixinKeyEncTab <span class="token operator">=</span>
    <span class="token punctuation">{</span>
        <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span>
        <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span>
        <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">52</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">//对 imgKey 和 subKey 进行字符顺序打乱编码</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">GetMixinKey</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> orig<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> MixinKeyEncTab<span class="token punctuation">.</span><span class="token function">Aggregate</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> s <span class="token operator">+</span> orig<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token range operator">..</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> <span class="token function">EncWbi</span><span class="token punctuation">(</span><span class="token class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> parameters<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> imgKey<span class="token punctuation">,</span>
        <span class="token class-name"><span class="token keyword">string</span></span> subKey<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name"><span class="token keyword">string</span></span> mixinKey <span class="token operator">=</span> <span class="token function">GetMixinKey</span><span class="token punctuation">(</span>imgKey <span class="token operator">+</span> subKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> currTime <span class="token operator">=</span> DateTimeOffset<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToUnixTimeSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//添加 wts 字段</span>
        parameters<span class="token punctuation">[</span><span class="token string">&quot;wts&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> currTime<span class="token punctuation">;</span>
        <span class="token comment">// 按照 key 重排参数</span>
        parameters <span class="token operator">=</span> parameters<span class="token punctuation">.</span><span class="token function">OrderBy</span><span class="token punctuation">(</span>p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>Key<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToDictionary</span><span class="token punctuation">(</span>p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>Key<span class="token punctuation">,</span> p <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span>Value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//过滤 value 中的 &quot;!&#39;()*&quot; 字符</span>
        parameters <span class="token operator">=</span> parameters<span class="token punctuation">.</span><span class="token function">ToDictionary</span><span class="token punctuation">(</span>
            kvp <span class="token operator">=&gt;</span> kvp<span class="token punctuation">.</span>Key<span class="token punctuation">,</span>
            kvp <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">string</span></span><span class="token punctuation">(</span>kvp<span class="token punctuation">.</span>Value<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>chr <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token string">&quot;!&#39;()*&quot;</span><span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>chr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 序列化参数</span>
        <span class="token class-name"><span class="token keyword">string</span></span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FormUrlEncodedContent</span><span class="token punctuation">(</span>parameters<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ReadAsStringAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Result<span class="token punctuation">;</span>
        <span class="token comment">//计算 w_rid</span>
        <span class="token keyword">using</span> <span class="token class-name">MD5</span> md5 <span class="token operator">=</span> MD5<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> hashBytes <span class="token operator">=</span> md5<span class="token punctuation">.</span><span class="token function">ComputeHash</span><span class="token punctuation">(</span>Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>query <span class="token operator">+</span> mixinKey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name"><span class="token keyword">string</span></span> wbiSign <span class="token operator">=</span> BitConverter<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span>hashBytes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToLower</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        parameters<span class="token punctuation">[</span><span class="token string">&quot;w_rid&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> wbiSign<span class="token punctuation">;</span>

        <span class="token keyword">return</span> parameters<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 获取最新的 img_key 和 sub_key</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">&gt;</span></span> <span class="token function">GetWbiKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">HttpResponseMessage</span> responseMessage <span class="token operator">=</span> <span class="token keyword">await</span> _httpClient<span class="token punctuation">.</span><span class="token function">SendAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpRequestMessage</span>
        <span class="token punctuation">{</span>
            Method <span class="token operator">=</span> HttpMethod<span class="token punctuation">.</span>Get<span class="token punctuation">,</span>
            RequestUri <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Uri</span><span class="token punctuation">(</span><span class="token string">&quot;https://api.bilibili.com/x/web-interface/nav&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">JsonNode</span> response <span class="token operator">=</span> JsonNode<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token keyword">await</span> responseMessage<span class="token punctuation">.</span>Content<span class="token punctuation">.</span><span class="token function">ReadAsStringAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">string</span></span> imgUrl <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">)</span>response<span class="token punctuation">[</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">]</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token string">&quot;wbi_img&quot;</span><span class="token punctuation">]</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token string">&quot;img_url&quot;</span><span class="token punctuation">]</span><span class="token operator">!</span><span class="token punctuation">;</span>
        imgUrl <span class="token operator">=</span> imgUrl<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">string</span></span> subUrl <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">)</span>response<span class="token punctuation">[</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">]</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token string">&quot;wbi_img&quot;</span><span class="token punctuation">]</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token string">&quot;sub_url&quot;</span><span class="token punctuation">]</span><span class="token operator">!</span><span class="token punctuation">;</span>
        subUrl <span class="token operator">=</span> subUrl<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">^</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>imgUrl<span class="token punctuation">,</span> subUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">var</span> <span class="token punctuation">(</span>imgKey<span class="token punctuation">,</span> subKey<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">GetWbiKeys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span> signedParams <span class="token operator">=</span> <span class="token function">EncWbi</span><span class="token punctuation">(</span>
            <span class="token named-parameter punctuation">parameters</span><span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Dictionary<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">string</span><span class="token punctuation">&gt;</span></span>
            <span class="token punctuation">{</span>
                <span class="token punctuation">{</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;114&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;514&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1919810&quot;</span> <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token named-parameter punctuation">imgKey</span><span class="token punctuation">:</span> imgKey<span class="token punctuation">,</span>
            <span class="token named-parameter punctuation">subKey</span><span class="token punctuation">:</span> subKey
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name"><span class="token keyword">string</span></span> query <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">FormUrlEncodedContent</span><span class="token punctuation">(</span>signedParams<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ReadAsStringAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出内容为进行 Wbi 签名的后参数的 url query 形式</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bar=514&amp;baz=1919810&amp;foo=114&amp;wts=1687541921&amp;w_rid=26e82b1b9b3a11dbb1807a9228a40d3b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="java" tabindex="-1"><a class="header-anchor" href="#java" aria-hidden="true">#</a> Java</h3><p>需要 <code>hutool</code> 依赖</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>demo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>hutool<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span></span><span class="token class-name">SecureUtil</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WbiTest</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> mixinKeyEncTab <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
            <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span>
            <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span>
            <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span>
            <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">52</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getMixinKey</span><span class="token punctuation">(</span><span class="token class-name">String</span> imgKey<span class="token punctuation">,</span> <span class="token class-name">String</span> subKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> s <span class="token operator">=</span> imgKey <span class="token operator">+</span> subKey<span class="token punctuation">;</span>
        <span class="token class-name">StringBuilder</span> key <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            key<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>mixinKeyEncTab<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> key<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">String</span> imgKey <span class="token operator">=</span> <span class="token string">&quot;653657f524a547ac981ded72ea172057&quot;</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> subKey <span class="token operator">=</span> <span class="token string">&quot;6e4909c702f846728e64f6007736a338&quot;</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> mixinKey <span class="token operator">=</span> <span class="token function">getMixinKey</span><span class="token punctuation">(</span>imgKey<span class="token punctuation">,</span> subKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mixinKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//72136226c6a73669787ee4fd02a74c27</span>
      <span class="token comment">//{</span>
      <span class="token comment">//     foo: &#39;one one four&#39;,</span>
      <span class="token comment">//     bar: &#39;五一四&#39;,</span>
      <span class="token comment">//     baz: 1919810</span>
      <span class="token comment">//}</span>
      <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;one one four&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;五一四&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;baz&quot;</span><span class="token punctuation">,</span> <span class="token number">1919810</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;wts&quot;</span><span class="token punctuation">,</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">StringJoiner</span> param <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringJoiner</span><span class="token punctuation">(</span><span class="token string">&quot;&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//排序 + 拼接字符串</span>
      map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">.</span><span class="token function">comparingByKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>entry <span class="token operator">-&gt;</span> param<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;=&quot;</span> <span class="token operator">+</span> <span class="token class-name">URLUtil</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> s <span class="token operator">=</span> param <span class="token operator">+</span> mixinKey<span class="token punctuation">;</span>
      <span class="token class-name">String</span> wbiSign <span class="token operator">=</span> <span class="token class-name">SecureUtil</span><span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>wbiSign<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> finalParam <span class="token operator">=</span> param <span class="token operator">+</span> <span class="token string">&quot;&amp;w_rid=&quot;</span> <span class="token operator">+</span> wbiSign<span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>finalParam<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23);function x(K,S){const t=e("RouterLink"),c=e("ExternalLinkIcon");return i(),l("div",null,[k,s("p",null,[n("自 2023 年三月起，B站 Web 端部分接口开始使用 Wbi 鉴权方式，即一种独立于 "),a(t,{to:"/docs/misc/sign/APP.html"},{default:o(()=>[n("APP 鉴权")]),_:1}),n(" 与其他 Cookie 鉴权的方式，表现在 REST API 请求时在 query 中添加了"),d,n("和"),m,n("字段，为一种 Web 端的风控手段")]),b,s("p",null,[n("感谢 "),s("a",v,[n("#631"),a(c)]),n(" 的研究与逆向工程")]),g,s("ol",null,[s("li",null,[y,s("p",null,[n("从 "),a(t,{to:"/docs/login/login_info.html#%E5%AF%BC%E8%88%AA%E6%A0%8F%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF"},{default:o(()=>[n("nav 接口")]),_:1}),n(" 中获取"),f,n("、"),w,n("两个字段的参数，并保存备用（如存入 localStorage），相关内容节选如下：")]),q]),h]),_])}const T=u(r,[["render",x],["__file","wbi.html.vue"]]);export{T as default};
